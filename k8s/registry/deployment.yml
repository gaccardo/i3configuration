kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: registry-images
  namespace: starfleet
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: nfs-client
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: registry-certs
  namespace: starfleet
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: nfs-client
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: registry-auth
  namespace: starfleet
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: nfs-client
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: registry
  labels:
    app: registry
  namespace: starfleet
spec:
  replicas: 1
  selector:
    matchLabels:
      app: registry
  template:
    metadata:
      labels:
        app: registry
    spec:
      containers:
      - name: registry
        image: registry:2
        env:
        - name: REGISTRY_AUTH
          value: "htpasswd"
        - name: REGISTRY_AUTH_HTPASSWD_REALM
          value: "Registry Realm"
        - name: REGISTRY_AUTH_HTPASSWD_PATH
          value: /auth/htpasswd
        - name: REGISTRY_HTTP_TLS_CERTIFICATE
          value: /certs/registry.starfleet.local.crt
        - name: REGISTRY_HTTP_TLS_KEY
          value: /certs/registry.starfleet.local.key
        volumeMounts:
        - mountPath: /var/lib/registry
          name: images
        - mountPath: /certs
          name: certs
        - mountPath: /auth
          name: auth
        ports:
        - containerPort: 5000
      volumes:
      - name: images
        persistentVolumeClaim:
          claimName: registry-images
      - name: certs
        persistentVolumeClaim:
          claimName: registry-certs
      - name: auth
        persistentVolumeClaim:
          claimName: registry-auth
---
apiVersion: v1
kind: Service
metadata:
  name: registry
  namespace: starfleet
  labels:
    name: registry
spec:
  ports:
  - port: 5001
    protocol: TCP
    targetPort: 5000
    nodePort: 30500
  selector:
    name: registry
  type: NodePort
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  labels:
    app: redis
  namespace: starfleet
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
      - name: redis
        image: redis:2
        ports:
        - containerPort: 6379
---
apiVersion: v1
kind: Service
metadata:
  name: redis
  namespace: starfleet
  labels:
    name: redis
spec:
  ports:
  - port: 16379
    protocol: TCP
    targetPort: 6379
    nodePort: 30000
  selector:
    name: redis
  type: NodePort
